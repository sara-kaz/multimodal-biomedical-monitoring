# Requirements for Edge Intelligence Multimodal Biomedical Monitoring
# Python 3.9 Compatible Version
# For thesis project: Wearable Sensor-Fusion System (ECG/PPG + IMU) on ESP32-S3

# ===============================================
# CORE DATA PROCESSING
# ===============================================
numpy>=1.21.0,<2.0.0
pandas>=1.3.0
scipy>=1.7.0
scikit-learn>=1.0.0
h5py>=3.6.0

# ===============================================
# BIOMEDICAL SIGNAL PROCESSING
# ===============================================
wfdb>=4.1.0              # MIT-BIH Arrhythmia dataset processing

# ===============================================
# DEEP LEARNING & NEURAL NETWORKS
# ===============================================
torch>=1.12.0,<2.1.0     # PyTorch for CNN/Transformer-Lite
torchvision>=0.13.0,<0.16.0
torchaudio>=0.12.0,<2.1.0

# ===============================================
# VISUALIZATION & ANALYSIS
# ===============================================
matplotlib>=3.5.0
seaborn>=0.11.0
plotly>=5.0.0            # Interactive plots
openpyxl>=3.0.0          # Excel file handling

# ===============================================
# UTILITIES & PROGRESS
# ===============================================
tqdm>=4.64.0             # Progress bars
pathlib2>=2.3.0          # Enhanced path handling

# ===============================================
# DEVELOPMENT TOOLS
# ===============================================
jupyter>=1.0.0           # Jupyter notebooks
ipykernel>=6.0.0
black>=22.0.0,<24.0.0    # Code formatting
pytest>=6.0.0            # Testing

# ===============================================
# EXPERIMENT TRACKING & LOGGING
# ===============================================
tensorboard>=2.8.0       # Training visualization
wandb>=0.12.0            # Weights & Biases (optional)

# ===============================================
# MODEL OPTIMIZATION FOR ESP32-S3 DEPLOYMENT
# ===============================================
onnx>=1.12.0,<1.16.0     # ONNX model export
onnxruntime>=1.12.0,<1.17.0  # ONNX inference
onnx-simplifier>=0.4.0   # Model simplification

# Neural Network Compression (Python 3.9 compatible alternatives)
torch-pruning>=1.0.0     # Structured pruning
# neural-compressor>=2.0   # Intel quantization toolkit (requires Python 3.10+)

# Note: Use PyTorch's built-in quantization (torch.quantization) for Python 3.9
# This is available in PyTorch 1.12+ and doesn't require additional packages

# ===============================================
# MODEL ANALYSIS & PROFILING
# ===============================================
torchinfo>=1.7.0         # Model summary (params, FLOPs, memory)
ptflops>=0.6.9           # FLOPs calculation for efficiency analysis
thop>=0.1.1              # Throughput and operations profiling
memory-profiler>=0.60.0  # Memory usage monitoring

# ===============================================
# EDGE DEPLOYMENT TOOLS
# ===============================================
esptool>=4.0.0           # ESP32 flashing and communication
platformio>=6.0.0        # Embedded development platform

# Code generation for C/C++
jinja2>=3.0.0            # Template engine for embedded C code

# ===============================================
# HYPERPARAMETER OPTIMIZATION
# ===============================================
optuna>=3.0.0,<4.0.0     # Automated hyperparameter tuning

# ===============================================
# SYSTEM MONITORING
# ===============================================
psutil>=5.8.0            # System and process monitoring
nvidia-ml-py>=11.495.46  # GPU monitoring (if available)
